<#macro govukPasswordInputMacro params>
  <#import "../macros/attributes.ftlh" as attributes><#import "../macros/i18n.ftlh" as i18n><#import "./button.ftlh" as button><#import "./input.ftlh" as input><#local attributesHtml>${' data-module="govuk-password-input"'?no_esc}${i18n.govukI18nAttributes({ "key": "show-password" } + ((params.showPasswordText)??)?then({ "message": params.showPasswordText }, {}))}${i18n.govukI18nAttributes({ "key": "hide-password" } + ((params.hidePasswordText)??)?then({ "message": params.hidePasswordText }, {}))}${i18n.govukI18nAttributes({ "key": "show-password-aria-label" } + ((params.showPasswordAriaLabelText)??)?then({ "message": params.showPasswordAriaLabelText }, {}))}${i18n.govukI18nAttributes({ "key": "hide-password-aria-label" } + ((params.hidePasswordAriaLabelText)??)?then({ "message": params.hidePasswordAriaLabelText }, {}))}${i18n.govukI18nAttributes({ "key": "password-shown-announcement" } + ((params.passwordShownAnnouncementText)??)?then({ "message": params.passwordShownAnnouncementText }, {}))}${i18n.govukI18nAttributes({ "key": "password-hidden-announcement" } + ((params.passwordHiddenAnnouncementText)??)?then({ "message": params.passwordHiddenAnnouncementText }, {}))}</#local><#list params.formGroup.attributes!{} as name, value>
    <#local attributesHtml=attributesHtml + " " + name + '="' + value + '"'>
  </#list><#local buttonHtml>
  ${button.govukButton({ "type": "button", "classes": "govuk-button--secondary govuk-password-input__toggle govuk-js-password-input-toggle" + (((params.button.classes)?has_content)?then(" " + params.button.classes, "")), "text": params.showPasswordText!("Show"), "attributes": { "aria-controls": params.id, "aria-label": params.showPasswordAriaLabelText!("Show password"), "hidden": { "value": true, "optional": true } } })?markup_string?trim?no_esc}
  <#if (params.formGroup.afterInput)??>${((params.formGroup.afterInput.html)?has_content)?then(params.formGroup.afterInput.html?no_esc?markup_string?trim?no_esc, (params.formGroup.afterInput.text)!)}
  </#if></#local>${input.govukInput({ "formGroup": { "classes": "govuk-password-input" + (((params.formGroup.classes)?has_content)?then(" " + params.formGroup.classes, "")), "afterInput": ((buttonHtml)??)?then({ "html": buttonHtml }, {}) } + ((attributesHtml)??)?then({ "attributes": attributesHtml }, {}) + ((params.formGroup.beforeInput)??)?then({ "beforeInput": params.formGroup.beforeInput }, {}), "inputWrapper": { "classes": "govuk-password-input__wrapper" }, "label": params.label, "classes": "govuk-password-input__input govuk-js-password-input-input" + (((params.classes)?has_content)?then(" " + params.classes, "")), "id": params.id, "name": params.name, "type": "password", "spellcheck": false, "autocapitalize": "none", "autocomplete": ((params.autocomplete)?has_content)?then(params.autocomplete, "current-password") } + ((params.hint)??)?then({ "hint": params.hint }, {}) + ((params.errorMessage)??)?then({ "errorMessage": params.errorMessage }, {}) + ((params.value)??)?then({ "value": params.value }, {}) + ((params.disabled)??)?then({ "disabled": params.disabled }, {}) + ((params.describedBy)??)?then({ "describedBy": params.describedBy }, {}) + ((params.attributes)??)?then({ "attributes": params.attributes }, {}))?markup_string?trim?no_esc}
  
</#macro>

<#function govukPasswordInput params>
  <#local result><@govukPasswordInputMacro params=params/></#local>
  <#return result>
</#function>