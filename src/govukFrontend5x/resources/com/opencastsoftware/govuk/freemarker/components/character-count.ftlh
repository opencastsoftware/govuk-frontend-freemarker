<#macro govukCharacterCountMacro params>
  <#import "../macros/attributes.ftlh" as attributes>
  <#import "../macros/i18n.ftlh" as i18n>
  <#import "./textarea.ftlh" as textarea>
  <#import "./hint.ftlh" as hint><#local hasNoLimit=(!((params.maxwords)?has_content) && !((params.maxlength)?has_content))><#local textareaDescriptionLength=((params.maxwords)?has_content)?then(params.maxwords, params.maxlength)><#local textareaDescriptionText=((params.textareaDescriptionText)?has_content)?then(params.textareaDescriptionText, "You can enter up to %{count} " + (((params.maxwords)?has_content)?then("words", "characters")))><#local textareaDescriptionTextNoLimit=(!((hasNoLimit)?? && hasNoLimit))?then(textareaDescriptionText?replace("%{count}", textareaDescriptionLength), "")><#local countMessageHtml>
  ${hint.govukHint({ "id": params.id + "-info", "classes": "govuk-character-count__message" + (((params.countMessage.classes)?has_content)?then(" " + params.countMessage.classes, "")) } + ((textareaDescriptionTextNoLimit)??)?then({ "text": textareaDescriptionTextNoLimit }, {}))?markup_string?trim?no_esc}
  <#if (params.formGroup.afterInput)??>${((params.formGroup.afterInput.html)?has_content)?then(params.formGroup.afterInput.html?no_esc?markup_string?trim?no_esc, (params.formGroup.afterInput.text)!)}
  </#if></#local><#local attributesHtml>${attributes.govukAttributes({ "data-module": "govuk-character-count", "data-maxlength": { "value": params.maxlength, "optional": true }, "data-threshold": { "optional": true } + ((params.threshold)??)?then({ "value": params.threshold }, {}), "data-maxwords": { "value": params.maxwords, "optional": true } })}<#if (hasNoLimit)?? && hasNoLimit && (params.textareaDescriptionText)?has_content>${i18n.govukI18nAttributes({ "key": "textarea-description", "messages": ((params.textareaDescriptionText)??)?then({ "other": params.textareaDescriptionText }, {}) })}</#if>${i18n.govukI18nAttributes({ "key": "characters-under-limit" } + ((params.charactersUnderLimitText)??)?then({ "messages": params.charactersUnderLimitText }, {}))}${i18n.govukI18nAttributes({ "key": "characters-at-limit" } + ((params.charactersAtLimitText)??)?then({ "message": params.charactersAtLimitText }, {}))}${i18n.govukI18nAttributes({ "key": "characters-over-limit" } + ((params.charactersOverLimitText)??)?then({ "messages": params.charactersOverLimitText }, {}))}${i18n.govukI18nAttributes({ "key": "words-under-limit" } + ((params.wordsUnderLimitText)??)?then({ "messages": params.wordsUnderLimitText }, {}))}${i18n.govukI18nAttributes({ "key": "words-at-limit" } + ((params.wordsAtLimitText)??)?then({ "message": params.wordsAtLimitText }, {}))}${i18n.govukI18nAttributes({ "key": "words-over-limit" } + ((params.wordsOverLimitText)??)?then({ "messages": params.wordsOverLimitText }, {}))}</#local><#list params.formGroup.attributes!{} as name, value>
    <#local attributesHtml=attributesHtml + " " + name + '="' + value + '"'>
  </#list>${textarea.govukTextarea({ "id": params.id, "name": params.name, "describedBy": params.id + "-info", "formGroup": { "classes": "govuk-character-count" + (((params.formGroup.classes)?has_content)?then(" " + params.formGroup.classes, "")), "afterInput": ((countMessageHtml)??)?then({ "html": countMessageHtml }, {}) } + ((attributesHtml)??)?then({ "attributes": attributesHtml }, {}) + ((params.formGroup.beforeInput)??)?then({ "beforeInput": params.formGroup.beforeInput }, {}), "classes": "govuk-js-character-count" + (((params.classes)?has_content)?then(" " + params.classes, "")), "label": { "for": params.id } + ((params.label.html)??)?then({ "html": params.label.html }, {}) + ((params.label.text)??)?then({ "text": params.label.text }, {}) + ((params.label.classes)??)?then({ "classes": params.label.classes }, {}) + ((params.label.isPageHeading)??)?then({ "isPageHeading": params.label.isPageHeading }, {}) + ((params.label.attributes)??)?then({ "attributes": params.label.attributes }, {}) } + ((params.rows)??)?then({ "rows": params.rows }, {}) + ((params.spellcheck)??)?then({ "spellcheck": params.spellcheck }, {}) + ((params.value)??)?then({ "value": params.value }, {}) + ((params.hint)??)?then({ "hint": params.hint }, {}) + ((params.errorMessage)??)?then({ "errorMessage": params.errorMessage }, {}) + ((params.attributes)??)?then({ "attributes": params.attributes }, {}))?markup_string?trim?no_esc}
  
</#macro>

<#function govukCharacterCount params>
  <#local result><@govukCharacterCountMacro params=params/></#local>
  <#return result>
</#function>